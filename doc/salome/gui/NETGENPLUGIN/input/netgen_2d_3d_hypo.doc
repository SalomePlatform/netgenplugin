/*!

\page netgen_2d_3d_hypo_page NETGEN 2D and 3D hypotheses

<b>NETGEN 2D Parameters</b> and <b>NETGEN 3D Parameters</b>
hypotheses work only with NETGEN algorithm in it's different forms:
- <b>NETGEN 1D-2D</b>
- <b>NETGEN 2D</b>
- <b>NETGEN 1D-2D-3D</b>
- <b>NETGEN 3D</b>. 

<b>NETGEN 1D-2D</b> and <b>NETGEN 1D-2D-3D</b>  algorithms do not
 require definition of lower-level hypotheses and algorithms (2D and
 1D for meshing 3D objects and 1D for meshing 2D objects).

<b>NETGEN 1D-2D-3D</b> algorithm has maximal number of options. The
rest forms have less options as they construct elements of less number
of dimensions. All options are distributed among following tabs:
- \ref arguments_anchor "Arguments" - basic options.
- \ref local_sizes_anchor "Local Sizes" - local element size.
- \ref advanced_anchor "Advanced" - advanced options.
- \ref stl_anchor "STL" - specific Remesher options.

\ref simple_anchor "NETGEN 2D/3D simple parameters" hypotheses allow
defining the size of elements for each dimension separately.


\anchor arguments_anchor
<h2> Arguments tab</h2> 

<b>Arguments</b> tab defines basic mesh parameters.

\image html netgen2d3d.png
<center><em>Main tab of hypothesis dialog box <b>NETGEN 1D-2D-3D</b> algorithm</em></center>
<br>

- <b>Name</b> - allows to define the name for the algorithm (NETGEN
2D (or 3D) Parameters by default).
- <b>Max Size</b> - maximum linear dimensions for mesh cells.
- <b>Min Size</b> - minimum linear dimensions for mesh cells. It is
ignored if it is more than <b>Max Size</b>.
- <b>Fineness</b> - ranging from <em>Very Coarse</em> to <em>Very Fine</em>
allows to set the level of meshing detalization using the three
parameters below. You can select \a Custom to define them manually.
- <b>Growth rate</b> - allows to define how much the linear dimensions of
two adjacent cells can differ (e.g. 0.3 means 30%).
- <b>Nb. Segs per Edge</b> - allows to define the minimum number of
mesh segments in which edges will be split. Size of elements computed using
this value is trimmed between <b>Min Size</b> and <b>Max Size</b>
bounds. This parameter is used only if <b>Limit Size by Surface
  Curvature</b> is checked.
- <b>Nb Segs per Radius</b> - allows to define the size of
mesh segments and mesh faces in which curved edges and surfaces will
be split. A radius of local curvature divided by this value gives an element
size at a given point. Element size computed this way is then trimmed
between <b>Min Size</b> and <b>Max Size</b> bounds. This parameter is
used only if <b>Limit Size by Surface Curvature</b> is checked.
- <b>Chordal Error</b> - allows to define the maximum distance between
the generated 2D element and the surface. Size of elements computed using
this criterion is trimmed between <b>Min Size</b> and <b>Max Size</b> bounds.
- <b>Limit Size by Surface Curvature</b> - if this box is checked in,
then size of mesh segments and mesh faces on curved edges and surfaces
is defined using value of <b>Nb Segs per Radius</b> parameter, and
number of segments on straight edges is defined by values of
<b>Nb. Segs per Edge</b> parameter. (<b>Growth rate</b> is also taken
into account.) If this box is not checked in, then size of elements is
defined by three parameters only:
<b>Max Size</b>, <b>Min Size</b> and <b>Growth rate</b>.
- <b>Quad-dominated</b> - if this box is checked in, the mesher
tries to generate quadrangle 2D mesh. Triangle elements are created
where quadrangles are not possible.
- <b>Second Order</b> - if this box is checked in, the algorithm will
create second order mesh.
- <b>Optimize</b> - if this box is checked in, the algorithm will modify
initially created mesh in order to improve quality of elements. Optimization
process is rather time consuming comparing to creation of initial
mesh.

Remesher has two additional basic options:
- <b>Keep existing edges</b> - if activated, all edges present in the
initial mesh are kept and used to separate STL surfaces.
- <b>Create groups of surfaces </b> if activated, all new surface
elements are distributed among groups corresponding to STL surfaces
the Remesher detects.


\anchor local_sizes_anchor
<h2> Local sizes tab</h2> 

<b>Local sizes</b> tab allows to define size of elements on and
around specified geometrical objects. 

\image html netgen3d_local_size.png

- To define the local
size it is necessary to select a geometrical objects in the
object browser or in the viewer, and to click a button corresponding
to the type of the geometrical objects: <b>On Vertex</b>, <b>On
  Edge</b> etc. <b>Name</b> of the geometrical object and a
default <b>Value</b> will be added in the table where the <b>Value</b>
can be changed.
- <b>Remove</b> - deletes a selected row from the table.
- <b>Mesh-size File</b> - opens a dialog to select a file defining
size of elements. The file includes two obligatory sections. The first
section defines the size at points. The second section defines the
size along lines. Sizes defined in the file are trimmed between <b>Min
Size</b> and <b>Max Size</b> bounds. Let's consider the following
sample size file.
\code
2
92.5 92.5 92.5 0.05
42.5 42.5 42.5 0.04
1
25 25 0 25 25 200  0.3
\endcode
"2" at the first line means that there are two points in the first
section.<br>
"92.5 92.5 92.5 0.05" at the second line means that at the point with
coordinates (92.5, 92.5, 92.5) size of elements should be 0.05.<br>
"1" at the fourth line means that there is one line in the second
section.<br>
"25 25 0 25 25 200  0.3" means that along the line between points (25,
25, 0) and (25, 25, 200) size of elements should be 0.3.



\anchor advanced_anchor 
<h2> Advanced tab</h2> 

<b>Advanced</b> tab allows advance controlling meshing algorithm.

\image html netgen_advanced.png

- <b>Element size weight</b> - weight of triangle size badness with respect to
triangle shape badness. Total triangle badness is evaluated as <em>
  shape_badness + size_weight * size_mismatch</em>.
- <b>Nb. surface optimization steps</b> - number of loops when optimizing surface mesh.
- <b>Nb. volume optimization steps</b> - number of loops when optimizing volume mesh.
- <b>Worst element measure</b> - power of error, used to approximate max error optimization.
- <b>Use Delaunay</b> - if activated, use Delaunay approach to
construct volume elements, otherwise use Advancing front method.
- <b>Check overlapping</b> - check overlapping surfaces during surface meshing.
- <b>Check chart boundary</b> - to check chart boundary.
- <b>Fuse Coincident Nodes on Edges and Vertices</b> - allows merging
mesh nodes on vertices and edges which are geometrically coincident
but are topologically different.



\anchor stl_anchor
<h2> STL tab</h2> 

<b> STL </b> tab holds option of Remesher (NETGEN 2D working w/o geometry).

\image html netgen2d_remesher.png
<center><em>Options specific to <b>NETGEN 2D</b> remesher algorithms</em></center>


- <b>Ridge angle</b> - defines minimum angle in degrees between
normals of adjacent triangles at which the remesher considers the edge
between these triangles as a feature edge. Feature edges bound charts
of triangles that are re-meshed as separate surfaces.
- <b> Edge corner angle </b> - defines minimum angle in degrees
between adjacent edges of chart boundary, above which a point shared
by the edges is considered as an end point of chart boundary curve.
- <b> Chart angle </b> - angle between normals of adjacent triangles 
under which a shared sharp edge is <em>not</em> considered as chart boundary,
provided that this edge is not classified as chart boundary due
to <b>Ridge angle</b> and <b>Keep existing edges</b> options.
- <b> Outer chart angle </b> - angle for overlapping parts of chart.
- <b> Chart distance </b> - defines a factor used to limit element
size by distance to neighbor chart.
- <b> Line length </b> - defines a factor used to limit size
of elements located near ends of chart boundary curves by length of a
chart boundary curve.
- <b> Close edges </b> - defines a factor used to limit size
of elements located near chart boundary curves by distance to other
chart boundary curves.
- <b> Surface curvature </b> - defines a factor used to limit size
of elements by surface curvature.
- <b> Edge angle </b> - defines a factor used to limit size
of elements by chart boundary curve curvature.
- <b> Surface mesh curvature</b> - defines a number of elements per
curvature radius.

\anchor simple_anchor
<h2> NETGEN 2D/3D simple parameters</h2> 

<b>NETGEN 2D simple parameters</b> and <b>NETGEN 3D simple
parameters</b> hypotheses allow defining the size of elements for each
dimension.

\image html netgen2d3d_simple.png

\b 1D group allows defining the size of 1D elements in either of two ways: 
- <b>Number of Segments</b> allows specifying number of segments, that
will split each edge, with equidistant distribution.
- <b>Local Length</b> defines length of segments.

\b 2D group allows defining the size of 2D elements 
- <b>Length from edges</b> if checked in, size of 
2D mesh elements is defined as an average mesh segment length
for a given wire, else
- <b>Max. Element Area</b> specifies expected maximum element area for
each 2d element.
- <b>Allow Quadrangles</b> - allows to generate quadrangle elements
wherever possible.

\b 3D groups allows defining the size of 3D elements.
- <b>Length from faces</b> if checked in, the area of sides of
volumic elements will be equal to an average area of 2D elements, else
- <b>Max. Element Volume</b> specifies expected maximum element volume
of 3d elements.

\note NETGEN algorithm does not strictly follow the input
parameters. The actual mesh can be more or less dense than
required. There are several factors in it:
- NETGEN does not actually use <b>Number of Segments</b> parameter for
discretization of edge. This parameter is used  only to define the
local element size (size at the given point), so local sizes of
close edges influence each other.
- NETGEN additionally restricts the element size according to edge curvature.
- The local size of segments influences the size of close triangles.
- The order of elements and their size in the 1D mesh generated by
NETGEN differ from those in the 1D mesh generated by Regular_1D
algorithm, which results in different 2D and 3D meshes at the same 1D
input parameters.

*/
